{"ast":null,"code":"/*! MIT License © Sindre Sorhus */\nimport { Ky } from './core/Ky.js';\nimport { requestMethods, stop } from './core/constants.js';\nimport { validateAndMerge } from './utils/merge.js';\nconst createInstance = defaults => {\n  // eslint-disable-next-line @typescript-eslint/promise-function-async\n  const ky = (input, options) => Ky.create(input, validateAndMerge(defaults, options));\n  for (const method of requestMethods) {\n    // eslint-disable-next-line @typescript-eslint/promise-function-async\n    ky[method] = (input, options) => Ky.create(input, validateAndMerge(defaults, options, {\n      method\n    }));\n  }\n  ky.create = newDefaults => createInstance(validateAndMerge(newDefaults));\n  ky.extend = newDefaults => createInstance(validateAndMerge(defaults, newDefaults));\n  ky.stop = stop;\n  return ky;\n};\nconst ky = createInstance();\nexport default ky;\nexport { HTTPError } from './errors/HTTPError.js';\nexport { TimeoutError } from './errors/TimeoutError.js';","map":{"version":3,"mappings":"AAAA;AAEA,SAAQA,EAAE,QAAO,cAAc;AAC/B,SAAQC,cAAc,EAAEC,IAAI,QAAO,qBAAqB;AAGxD,SAAQC,gBAAgB,QAAO,kBAAkB;AAGjD,MAAMC,cAAc,GAAIC,QAA2B,IAAgB;EAClE;EACA,MAAMC,EAAE,GAAiC,CAACC,KAAY,EAAEC,OAAiB,KAAKR,EAAE,CAACS,MAAM,CAACF,KAAK,EAAEJ,gBAAgB,CAACE,QAAQ,EAAEG,OAAO,CAAC,CAAC;EAEnI,KAAK,MAAME,MAAM,IAAIT,cAAc,EAAE;IACpC;IACAK,EAAE,CAACI,MAAM,CAAC,GAAG,CAACH,KAAY,EAAEC,OAAiB,KAAKR,EAAE,CAACS,MAAM,CAACF,KAAK,EAAEJ,gBAAgB,CAACE,QAAQ,EAAEG,OAAO,EAAE;MAACE;IAAM,CAAC,CAAC,CAAC;;EAGlHJ,EAAE,CAACG,MAAM,GAAIE,WAA8B,IAAKP,cAAc,CAACD,gBAAgB,CAACQ,WAAW,CAAC,CAAC;EAC7FL,EAAE,CAACM,MAAM,GAAID,WAA8B,IAAKP,cAAc,CAACD,gBAAgB,CAACE,QAAQ,EAAEM,WAAW,CAAC,CAAC;EACvGL,EAAE,CAACJ,IAAI,GAAGA,IAAI;EAEd,OAAOI,EAAgB;AACxB,CAAC;AAED,MAAMA,EAAE,GAAGF,cAAc,EAAE;AAE3B,eAAeE,EAAE;AAqBjB,SAAQO,SAAS,QAAO,uBAAuB;AAC/C,SAAQC,YAAY,QAAO,0BAA0B","names":["Ky","requestMethods","stop","validateAndMerge","createInstance","defaults","ky","input","options","create","method","newDefaults","extend","HTTPError","TimeoutError"],"sources":["/Users/devonmartin/Hacker Shit/VSCode Projects/Personal Projects/Portfolio Remade/client/node_modules/ky/source/index.ts"],"sourcesContent":["/*! MIT License © Sindre Sorhus */\n\nimport {Ky} from './core/Ky.js';\nimport {requestMethods, stop} from './core/constants.js';\nimport type {KyInstance} from './types/ky.js';\nimport type {Input, Options} from './types/options.js';\nimport {validateAndMerge} from './utils/merge.js';\nimport {Mutable} from './utils/types.js';\n\nconst createInstance = (defaults?: Partial<Options>): KyInstance => {\n\t// eslint-disable-next-line @typescript-eslint/promise-function-async\n\tconst ky: Partial<Mutable<KyInstance>> = (input: Input, options?: Options) => Ky.create(input, validateAndMerge(defaults, options));\n\n\tfor (const method of requestMethods) {\n\t\t// eslint-disable-next-line @typescript-eslint/promise-function-async\n\t\tky[method] = (input: Input, options?: Options) => Ky.create(input, validateAndMerge(defaults, options, {method}));\n\t}\n\n\tky.create = (newDefaults?: Partial<Options>) => createInstance(validateAndMerge(newDefaults));\n\tky.extend = (newDefaults?: Partial<Options>) => createInstance(validateAndMerge(defaults, newDefaults));\n\tky.stop = stop;\n\n\treturn ky as KyInstance;\n};\n\nconst ky = createInstance();\n\nexport default ky;\n\nexport type {\n\tOptions,\n\tNormalizedOptions,\n\tRetryOptions,\n\tSearchParamsOption,\n\tDownloadProgress,\n} from './types/options.js';\n\nexport type {\n\tHooks,\n\tBeforeRequestHook,\n\tBeforeRetryHook,\n\tBeforeRetryState,\n\tBeforeErrorHook,\n\tAfterResponseHook,\n} from './types/hooks.js';\n\nexport type {ResponsePromise} from './types/ResponsePromise.js';\nexport type {KyResponse} from './types/response.js';\nexport {HTTPError} from './errors/HTTPError.js';\nexport {TimeoutError} from './errors/TimeoutError.js';\n"]},"metadata":{},"sourceType":"module"}