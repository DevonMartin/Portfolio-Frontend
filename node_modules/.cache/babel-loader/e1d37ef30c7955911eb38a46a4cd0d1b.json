{"ast":null,"code":"import { TimeoutError } from '../errors/TimeoutError.js';\n// `Promise.race()` workaround (#91)\nexport default async function timeout(request, abortController, options) {\n  return new Promise((resolve, reject) => {\n    const timeoutId = setTimeout(() => {\n      if (abortController) {\n        abortController.abort();\n      }\n      reject(new TimeoutError(request));\n    }, options.timeout);\n    void options.fetch(request).then(resolve).catch(reject).then(() => {\n      clearTimeout(timeoutId);\n    });\n  });\n}","map":{"version":3,"mappings":"AAAA,SAAQA,YAAY,QAAO,2BAA2B;AAOtD;AACA,eAAe,eAAeC,OAAO,CACpCC,OAAgB,EAChBC,eAA4C,EAC5CC,OAAuB;EAEvB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;IACtC,MAAMC,SAAS,GAAGC,UAAU,CAAC,MAAK;MACjC,IAAIN,eAAe,EAAE;QACpBA,eAAe,CAACO,KAAK,EAAE;;MAGxBH,MAAM,CAAC,IAAIP,YAAY,CAACE,OAAO,CAAC,CAAC;IAClC,CAAC,EAAEE,OAAO,CAACH,OAAO,CAAC;IAEnB,KAAKG,OAAO,CACVO,KAAK,CAACT,OAAO,CAAC,CACdU,IAAI,CAACN,OAAO,CAAC,CACbO,KAAK,CAACN,MAAM,CAAC,CACbK,IAAI,CAAC,MAAK;MACVE,YAAY,CAACN,SAAS,CAAC;IACxB,CAAC,CAAC;EACJ,CAAC,CAAC;AACH","names":["TimeoutError","timeout","request","abortController","options","Promise","resolve","reject","timeoutId","setTimeout","abort","fetch","then","catch","clearTimeout"],"sources":["/Users/devonmartin/Hacker Shit/VSCode Projects/Personal Projects/Portfolio Remade/client/node_modules/ky/source/utils/timeout.ts"],"sourcesContent":["import {TimeoutError} from '../errors/TimeoutError.js';\n\nexport type TimeoutOptions = {\n\ttimeout: number;\n\tfetch: typeof fetch;\n};\n\n// `Promise.race()` workaround (#91)\nexport default async function timeout(\n\trequest: Request,\n\tabortController: AbortController | undefined,\n\toptions: TimeoutOptions,\n): Promise<Response> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst timeoutId = setTimeout(() => {\n\t\t\tif (abortController) {\n\t\t\t\tabortController.abort();\n\t\t\t}\n\n\t\t\treject(new TimeoutError(request));\n\t\t}, options.timeout);\n\n\t\tvoid options\n\t\t\t.fetch(request)\n\t\t\t.then(resolve)\n\t\t\t.catch(reject)\n\t\t\t.then(() => {\n\t\t\t\tclearTimeout(timeoutId);\n\t\t\t});\n\t});\n}\n"]},"metadata":{},"sourceType":"module"}